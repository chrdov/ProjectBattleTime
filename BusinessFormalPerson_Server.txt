local Player = game.Players:GetPlayerFromCharacter(script.Parent) or game.Players:WaitForChild("CBDove4")
if Player then
local Character = Player.Character
function findNearestTorso(pos,dist)
	local list = game.Workspace:children()
	local torso = nil
	local temp = nil
	local human = nil
	local temp2 = nil
	for x = 1, #list do
		temp2 = list[x]
		if (temp2.className == "Model") and (temp2 ~= Player.Character) then
			temp = temp2:findFirstChild("HumanoidRootPart") or temp2:findFirstChild("Torso")
			human = temp2:findFirstChild("Humanoid")
			if (temp ~= nil) and (human ~= nil) and (human.Health > 0) then
				if (temp.Position - pos).magnitude < dist then
					torso = temp
					dist = (temp.Position - pos).magnitude
				end
			end
		end
	end
	if torso ~= nil then
		return torso.Parent
	end
end
local Cash = Instance.new("DoubleConstrainedValue",Character)
Cash.Name = "Cash"
Cash.MinValue = 0
Cash.MaxValue = 1000
Cash.Changed:connect(function()
	print((Player.Name).."'s "..(Cash.Name)..": "..(Cash.Value))
end)
local Humanoid = Character:FindFirstChildOfClass("Humanoid")
local Shirt = Character:FindFirstChildOfClass("Shirt") or Instance.new("Shirt",Character)
local Pants = Character:FindFirstChildOfClass("Pants") or Instance.new("Pants",Character)
local BodyColors = Character:FindFirstChildOfClass("BodyColors") or Instance.new("BodyColors",Character)
if BodyColors then
	BodyColors.TorsoColor3 = Color3.fromRGB(0,255,0)
	BodyColors.LeftArmColor3 = BodyColors.TorsoColor3
	BodyColors.RightArmColor3 = BodyColors.TorsoColor3
	BodyColors.LeftLegColor3 = BodyColors.TorsoColor3
	BodyColors.RightLegColor3 = BodyColors.TorsoColor3
end
if Shirt ~= nil then
	Shirt.ShirtTemplate = "rbxassetid://102716091"
end
if Pants ~= nil then
	Pants.PantsTemplate = "rbxassetid://102712920"
end
Character.Animate.Disabled = true
Character.Health.Disabled = true
local welds = {}
welds.torsoWeld = Instance.new("Weld",Character:WaitForChild("HumanoidRootPart"))
welds.leftLegWeld = Instance.new("Weld",Character:WaitForChild("Torso"))
welds.rightLegWeld = Instance.new("Weld",Character:FindFirstChild("Torso"))
welds.leftArmWeld = Instance.new("Weld",Character:FindFirstChild("Torso"))
welds.rightArmWeld = Instance.new("Weld",Character:FindFirstChild("Torso"))
welds.headWeld = Instance.new("Weld",Character:FindFirstChild("Torso"))
welds.headWeld.Part0 = Character:FindFirstChild("Torso")
welds.headWeld.Part1 = Character:WaitForChild("Head")
welds.headWeld.C0 = CFrame.new(Vector3.new(0,1.5,0))
welds.torsoWeld.Part0 = Character:FindFirstChild("HumanoidRootPart")
welds.torsoWeld.Part1 = Character:FindFirstChild("Torso")
welds.leftLegWeld.Part0 = Character:FindFirstChild("Torso")
welds.leftLegWeld.Part1 = Character:WaitForChild("Left Leg")
welds.rightLegWeld.Part0 = Character:FindFirstChild("Torso")
welds.rightLegWeld.Part1 = Character:WaitForChild("Right Leg")
welds.leftArmWeld.Part0 = Character:FindFirstChild("Torso")
welds.leftArmWeld.Part1 = Character:WaitForChild("Left Arm")
welds.rightArmWeld.Part0 = Character:FindFirstChild("Torso")
welds.rightArmWeld.Part1 = Character:WaitForChild("Right Arm")
welds.leftLegWeld.C0 = CFrame.new(Vector3.new(-0.5,-1,0))
welds.rightLegWeld.C0 = CFrame.new(Vector3.new(0.5,-1,0))
welds.leftArmWeld.C0 = CFrame.new(Vector3.new(-1.5,0.5,0))
welds.rightArmWeld.C0 = CFrame.new(Vector3.new(1.5,0.5,0))
welds.leftLegWeld.C1 = CFrame.new(Vector3.new(0,1,0))
welds.rightLegWeld.C1 = CFrame.new(Vector3.new(0,1,0))
welds.leftArmWeld.C1 = CFrame.new(Vector3.new(0,0.5,0))
welds.rightArmWeld.C1 = CFrame.new(Vector3.new(0,0.5,0))
local defaultC0 = {}
local defaultC1 = {}
local targetC0 = {}
local targetC1 = {}
defaultC0.headWeld = welds.headWeld.C0
defaultC0.torsoWeld = welds.torsoWeld.C0
defaultC0.leftArmWeld = welds.leftArmWeld.C0
defaultC0.rightArmWeld = welds.rightArmWeld.C0
defaultC0.leftLegWeld = welds.leftLegWeld.C0
defaultC0.rightLegWeld = welds.rightLegWeld.C0
defaultC1.headWeld = welds.headWeld.C1
defaultC1.torsoWeld = welds.torsoWeld.C1
defaultC1.leftArmWeld = welds.leftArmWeld.C1
defaultC1.rightArmWeld = welds.rightArmWeld.C1
defaultC1.leftLegWeld = welds.leftLegWeld.C1
defaultC1.rightLegWeld = welds.rightLegWeld.C1
targetC0.headWeld = CFrame.new(0,0,0)
targetC0.torsoWeld = CFrame.new(0,0,0)
targetC0.leftArmWeld = CFrame.new(0,0,0)
targetC0.rightArmWeld = CFrame.new(0,0,0)
targetC0.leftLegWeld = CFrame.new(0,0,0)
targetC0.rightLegWeld = CFrame.new(0,0,0)
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
local defaultC0 = {}
local defaultC1 = {}
local targetC0 = {}
local targetC1 = {}
defaultC0.headWeld = welds.headWeld.C0
defaultC0.torsoWeld = welds.torsoWeld.C0
defaultC0.leftArmWeld = welds.leftArmWeld.C0
defaultC0.rightArmWeld = welds.rightArmWeld.C0
defaultC0.leftLegWeld = welds.leftLegWeld.C0
defaultC0.rightLegWeld = welds.rightLegWeld.C0
defaultC1.headWeld = welds.headWeld.C1
defaultC1.torsoWeld = welds.torsoWeld.C1
defaultC1.leftArmWeld = welds.leftArmWeld.C1
defaultC1.rightArmWeld = welds.rightArmWeld.C1
defaultC1.leftLegWeld = welds.leftLegWeld.C1
defaultC1.rightLegWeld = welds.rightLegWeld.C1
targetC0.headWeld = CFrame.new(0,0,0)
targetC0.torsoWeld = CFrame.new(0,0,0)
targetC0.leftArmWeld = CFrame.new(0,0,0)
targetC0.rightArmWeld = CFrame.new(0,0,0)
targetC0.leftLegWeld = CFrame.new(0,0,0)
targetC0.rightLegWeld = CFrame.new(0,0,0)
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
local alpha = 0.9
local debounce = false
local heldKeys = {}
Humanoid.JumpPower = 0
Humanoid.WalkSpeed = 16
local t = os.time()
local function onKeyDown(Plr,Mouse,MouseTarget,key)
if Plr ~= Player then return end
heldKeys[key] = true
if debounce then return end
local Target = findNearestTorso(Character.HumanoidRootPart.Position,5)
if key == "mouseLeft" then
debounce = true
targetC0.headWeld = CFrame.Angles(0,math.rad(80),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(-80),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(180),math.rad(10),math.rad(-60))
targetC0.rightArmWeld = CFrame.Angles(math.rad(60),0,math.rad(-35))
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
if Target ~= nil then
if Target.Humanoid.Health > 0 then
Target.Humanoid:TakeDamage(10)
Cash.Value = Cash.Value + 100
end
end
wait(0.15)
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
targetC0.headWeld = CFrame.Angles(0,math.rad(45),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(-45),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(120),0,math.rad(30))
targetC0.rightArmWeld = CFrame.Angles(math.rad(60),0,math.rad(-30))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
wait(0.05)
debounce = false
elseif key == "mouseRight" then
debounce = true
targetC0.headWeld = CFrame.Angles(0,math.rad(-80),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(80),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(60),0,math.rad(35))
targetC0.rightArmWeld = CFrame.Angles(math.rad(180),math.rad(-10),math.rad(60))
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
if Target ~= nil then
if Target.Humanoid.Health > 0 then
Target.Humanoid:TakeDamage(10)
Cash.Value = Cash.Value + 100
end
end
wait(0.15)
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
targetC0.headWeld = CFrame.Angles(0,math.rad(45),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(-45),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(120),0,math.rad(30))
targetC0.rightArmWeld = CFrame.Angles(math.rad(60),0,math.rad(-30))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
wait(0.05)
debounce = false
elseif key == " " and Cash.Value == Cash.MaxValue then
debounce = true
Humanoid.MaxHealth = Humanoid.MaxHealth * 5
Humanoid.Health = Humanoid.Health * 5
local newHealth = Humanoid.Health
local oldHealth = Humanoid.Health
local damage = oldHealth - newHealth
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
targetC0.headWeld = CFrame.Angles(0,0,0)
targetC0.torsoWeld = CFrame.Angles(0,0,0)
targetC0.leftArmWeld = CFrame.new(0.5,0,-0.5) * CFrame.Angles(math.rad(175),0,math.rad(25))
targetC0.rightArmWeld = CFrame.new(-0.5,0,-0.5) * CFrame.Angles(math.rad(175),0,math.rad(-25))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
Humanoid.WalkSpeed = Humanoid.WalkSpeed / 16
local Counter = 0
for i = 1,15 do
newHealth = Humanoid.Health
damage = oldHealth - newHealth
if Counter > 0 then
Counter = Counter - 1
end
if Counter < 0 then
Counter = 0
end
if damage > 0 then
Counter = 10
break
end
wait()
oldHealth = Humanoid.Health
end
repeat
newHealth = Humanoid.Health
damage = oldHealth - newHealth
if Counter > 0 then
Counter = Counter - 1
end
if Counter < 0 then
Counter = 0
end
if damage > 0 then
Counter = 10
end
wait()
oldHealth = Humanoid.Health
until not heldKeys[key]
Target = findNearestTorso(Character.HumanoidRootPart.Position,5)
if Target ~= nil then
if Target.Humanoid.Health > 0 then
Target.Humanoid.WalkSpeed = 0
Target.Humanoid.JumpPower = 0
end
end
if Counter > 0 then
targetC0.headWeld = CFrame.Angles(0,math.rad(80),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(-80),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(60),0,math.rad(35))
targetC0.rightArmWeld = CFrame.Angles(math.rad(90),math.rad(10),math.rad(95))
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
wait(0.25)
targetC0.headWeld = CFrame.Angles(0,math.rad(-80),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(80),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(60),0,math.rad(35))
targetC0.rightArmWeld = CFrame.Angles(math.rad(180),math.rad(-10),math.rad(30))
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
if Target ~= nil then
if Target.Humanoid.Health > 0 then
for _,Part in pairs(Target:GetChildren()) do
if Part:IsA("BasePart") then
Part.Anchored = true
end
end
Cash.Value = Cash.MinValue
end
end
if Target ~= nil then
if Target.Humanoid.Health > 0 then
for i = 1,29 do
Target.Humanoid.Health = Target.Humanoid.MaxHealth - ((Target.Humanoid.MaxHealth / 30) * i)
wait()
end
for _,Part in pairs(Target:GetChildren()) do
if Part:IsA("BasePart") then
if Part.Name == "HumanoidRootPart" then
Part.Velocity = Vector3.new(0,100,0)
end
Part.Anchored = false
end
end
Target.Humanoid.PlatformStand = true
local TargetRootPart = Target:FindFirstChild("HumanoidRootPart") or Target:WaitForChild("Torso")
local TargetPart = TargetRootPart.Touched:wait()
if TargetPart.Parent == Target then
repeat
TargetPart = TargetRootPart.Touched:wait()
until TargetPart.Parent ~= Target 
end
Target:BreakJoints()
end
end
else
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
targetC0.headWeld = CFrame.Angles(0,0,0)
targetC0.torsoWeld = CFrame.Angles(0,0,0)
targetC0.leftArmWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightArmWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
wait(1)
end
Humanoid.WalkSpeed = Humanoid.WalkSpeed * 16
Humanoid.Health = Humanoid.Health / 5
Humanoid.MaxHealth = Humanoid.MaxHealth / 5
debounce = false
elseif key == " " and Cash.Value < Cash.MaxValue then
debounce = true
Humanoid.MaxHealth = Humanoid.MaxHealth * 5
Humanoid.Health = Humanoid.Health * 5
local newHealth = Humanoid.Health
local oldHealth = Humanoid.Health
local damage = oldHealth - newHealth
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
targetC0.headWeld = CFrame.Angles(0,0,0)
targetC0.torsoWeld = CFrame.Angles(0,0,0)
targetC0.leftArmWeld = CFrame.new(0.5,0,-0.5) * CFrame.Angles(math.rad(175),0,math.rad(25))
targetC0.rightArmWeld = CFrame.new(-0.5,0,-0.5) * CFrame.Angles(math.rad(175),0,math.rad(-25))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
Humanoid.WalkSpeed = Humanoid.WalkSpeed / 16
repeat
newHealth = Humanoid.Health
damage = oldHealth - newHealth
if damage > 0 then
Cash.Value = Cash.Value + (damage * 4)
end
wait()
oldHealth = Humanoid.Health
until not heldKeys[key]
Humanoid.WalkSpeed = Humanoid.WalkSpeed * 16
Humanoid.Health = Humanoid.Health / 5
Humanoid.MaxHealth = Humanoid.MaxHealth / 5
debounce = false
elseif key == "w" or key == "a" or key == "s" or key == "d" then
if (os.time() - t) <= 0.3 then
Humanoid.WalkSpeed = Humanoid.WalkSpeed * 3
wait(0.2)
Humanoid.WalkSpeed = Humanoid.WalkSpeed / 3
end
t = os.time()
elseif key == "q" or key == "e" then
if Cash.Value == Cash.MaxValue then
debounce = true
targetC0.headWeld = CFrame.Angles(0,math.rad(80),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(-80),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(60),0,math.rad(35))
targetC0.rightArmWeld = CFrame.Angles(math.rad(90),math.rad(10),math.rad(95))
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
wait(0.25)
targetC0.headWeld = CFrame.Angles(0,math.rad(-80),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(80),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(60),0,math.rad(35))
targetC0.rightArmWeld = CFrame.Angles(math.rad(180),math.rad(-10),math.rad(30))
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
if Target ~= nil then
if Target.Humanoid.Health > 0 then
for _,Part in pairs(Target:GetChildren()) do
if Part:IsA("BasePart") then
Part.Anchored = true
end
end
Cash.Value = Cash.MinValue
end
end
if Target ~= nil then
if Target.Humanoid.Health > 0 then
for i = 1,29 do
Target.Humanoid.Health = Target.Humanoid.MaxHealth - ((Target.Humanoid.MaxHealth / 30) * i)
wait()
end
for _,Part in pairs(Target:GetChildren()) do
if Part:IsA("BasePart") then
if Part.Name == "HumanoidRootPart" then
Part.Velocity = Vector3.new(0,100,0)
end
Part.Anchored = false
end
end
debounce = false
Target.Humanoid.PlatformStand = true
local TargetRootPart = Target:FindFirstChild("HumanoidRootPart") or Target:WaitForChild("Torso")
local TargetPart = TargetRootPart.Touched:wait()
if TargetPart.Parent == Target then
repeat
TargetPart = TargetRootPart.Touched:wait()
until TargetPart.Parent ~= Target 
end
Target:BreakJoints()
end
end
debounce = false
end
end
end
local function onKeyUp(Plr,key)
if Plr ~= Player then return end
heldKeys[key] = nil
end
local KeyDown = Instance.new("RemoteEvent",Character)
KeyDown.Name = "KeyDown"
KeyDown.OnServerEvent:connect(onKeyDown)
local KeyUp = Instance.new("RemoteEvent",Character)
KeyUp.Name = "KeyUp"
KeyUp.OnServerEvent:connect(onKeyUp)
spawn(function()
while Humanoid.Health > 0 do
for k,_ in pairs(welds) do
local aC0 = defaultC0[k] * targetC0[k]
local aC1 = defaultC1[k] * targetC1[k]
local bC0 = welds[k].C0
local bC1 = welds[k].C1
welds[k].C0 = bC0:Lerp(aC0,alpha)
welds[k].C1 = bC1:Lerp(aC1,alpha)
end
if Humanoid.MoveDirection.Magnitude > 0 then
if not debounce then
targetC0.leftLegWeld = CFrame.Angles(0,0,(math.rad(-5) * math.sin(game.Workspace.DistributedGameTime * 9 * (Humanoid.WalkSpeed / 16)) * Humanoid.MoveDirection.Magnitude) + math.rad(-5))
targetC0.rightLegWeld = CFrame.Angles(0,0,(math.rad(5) * math.sin(game.Workspace.DistributedGameTime * 9 * (Humanoid.WalkSpeed / 16)) * Humanoid.MoveDirection.Magnitude) + math.rad(5))
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
targetC0.headWeld = CFrame.Angles(0,math.rad(45),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(-45),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(120),0,(math.rad(5) * math.sin(game.Workspace.DistributedGameTime * 9 * (Humanoid.WalkSpeed / 16)) * Humanoid.MoveDirection.Magnitude) + math.rad(25))
targetC0.rightArmWeld = CFrame.Angles(math.rad(60),0,(math.rad(-5) * math.sin(game.Workspace.DistributedGameTime * 9 * (Humanoid.WalkSpeed / 16)) * Humanoid.MoveDirection.Magnitude) + math.rad(-25))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
end
else
if not debounce then
targetC0.leftLegWeld = CFrame.Angles(0,0,math.rad(-10))
targetC0.rightLegWeld = CFrame.Angles(0,0,math.rad(10))
targetC1.leftLegWeld = CFrame.new(0,0,0)
targetC1.rightLegWeld = CFrame.new(0,0,0)
targetC0.headWeld = CFrame.Angles(0,math.rad(45),0)
targetC0.torsoWeld = CFrame.Angles(0,math.rad(-45),0)
targetC0.leftArmWeld = CFrame.Angles(math.rad(120),0,math.rad(30))
targetC0.rightArmWeld = CFrame.Angles(math.rad(60),0,math.rad(-30))
targetC1.headWeld = CFrame.new(0,0,0)
targetC1.torsoWeld = CFrame.new(0,0,0)
targetC1.leftArmWeld = CFrame.new(0,0,0)
targetC1.rightArmWeld = CFrame.new(0,0,0)
end
end
wait()
end
end)
end
